#ifndef __JAVA_IO_INPUTSTREAMREADER__
#define __JAVA_IO_INPUTSTREAMREADER__

#include "xmlvm.h"

// Preprocessor constants for interfaces:
#define XMLVM_ITABLE_SIZE_java_io_InputStreamReader 9
// Implemented interfaces:
// Super Class:
#include "java_io_Reader.h"

// Circular references:
#ifndef XMLVM_FORWARD_DECL_java_io_IOException
#define XMLVM_FORWARD_DECL_java_io_IOException
XMLVM_FORWARD_DECL(java_io_IOException)
#endif
#ifndef XMLVM_FORWARD_DECL_java_io_InputStream
#define XMLVM_FORWARD_DECL_java_io_InputStream
XMLVM_FORWARD_DECL(java_io_InputStream)
#endif
#ifndef XMLVM_FORWARD_DECL_java_io_UnsupportedEncodingException
#define XMLVM_FORWARD_DECL_java_io_UnsupportedEncodingException
XMLVM_FORWARD_DECL(java_io_UnsupportedEncodingException)
#endif
#ifndef XMLVM_FORWARD_DECL_java_lang_Class
#define XMLVM_FORWARD_DECL_java_lang_Class
XMLVM_FORWARD_DECL(java_lang_Class)
#endif
#ifndef XMLVM_FORWARD_DECL_java_lang_IllegalArgumentException
#define XMLVM_FORWARD_DECL_java_lang_IllegalArgumentException
XMLVM_FORWARD_DECL(java_lang_IllegalArgumentException)
#endif
#ifndef XMLVM_FORWARD_DECL_java_lang_IndexOutOfBoundsException
#define XMLVM_FORWARD_DECL_java_lang_IndexOutOfBoundsException
XMLVM_FORWARD_DECL(java_lang_IndexOutOfBoundsException)
#endif
#ifndef XMLVM_FORWARD_DECL_java_lang_NullPointerException
#define XMLVM_FORWARD_DECL_java_lang_NullPointerException
XMLVM_FORWARD_DECL(java_lang_NullPointerException)
#endif
#ifndef XMLVM_FORWARD_DECL_java_lang_Object
#define XMLVM_FORWARD_DECL_java_lang_Object
XMLVM_FORWARD_DECL(java_lang_Object)
#endif
#ifndef XMLVM_FORWARD_DECL_java_lang_String
#define XMLVM_FORWARD_DECL_java_lang_String
XMLVM_FORWARD_DECL(java_lang_String)
#endif
#ifndef XMLVM_FORWARD_DECL_java_lang_Throwable
#define XMLVM_FORWARD_DECL_java_lang_Throwable
XMLVM_FORWARD_DECL(java_lang_Throwable)
#endif
#ifndef XMLVM_FORWARD_DECL_java_nio_ByteBuffer
#define XMLVM_FORWARD_DECL_java_nio_ByteBuffer
XMLVM_FORWARD_DECL(java_nio_ByteBuffer)
#endif
#ifndef XMLVM_FORWARD_DECL_java_nio_CharBuffer
#define XMLVM_FORWARD_DECL_java_nio_CharBuffer
XMLVM_FORWARD_DECL(java_nio_CharBuffer)
#endif
#ifndef XMLVM_FORWARD_DECL_java_nio_charset_Charset
#define XMLVM_FORWARD_DECL_java_nio_charset_Charset
XMLVM_FORWARD_DECL(java_nio_charset_Charset)
#endif
#ifndef XMLVM_FORWARD_DECL_java_nio_charset_CharsetDecoder
#define XMLVM_FORWARD_DECL_java_nio_charset_CharsetDecoder
XMLVM_FORWARD_DECL(java_nio_charset_CharsetDecoder)
#endif
#ifndef XMLVM_FORWARD_DECL_java_nio_charset_CoderResult
#define XMLVM_FORWARD_DECL_java_nio_charset_CoderResult
XMLVM_FORWARD_DECL(java_nio_charset_CoderResult)
#endif
#ifndef XMLVM_FORWARD_DECL_java_nio_charset_CodingErrorAction
#define XMLVM_FORWARD_DECL_java_nio_charset_CodingErrorAction
XMLVM_FORWARD_DECL(java_nio_charset_CodingErrorAction)
#endif
#ifndef XMLVM_FORWARD_DECL_java_nio_charset_MalformedInputException
#define XMLVM_FORWARD_DECL_java_nio_charset_MalformedInputException
XMLVM_FORWARD_DECL(java_nio_charset_MalformedInputException)
#endif
#ifndef XMLVM_FORWARD_DECL_java_nio_charset_UnmappableCharacterException
#define XMLVM_FORWARD_DECL_java_nio_charset_UnmappableCharacterException
XMLVM_FORWARD_DECL(java_nio_charset_UnmappableCharacterException)
#endif
#ifndef XMLVM_FORWARD_DECL_java_security_AccessController
#define XMLVM_FORWARD_DECL_java_security_AccessController
XMLVM_FORWARD_DECL(java_security_AccessController)
#endif
#ifndef XMLVM_FORWARD_DECL_org_apache_harmony_luni_internal_nls_Messages
#define XMLVM_FORWARD_DECL_org_apache_harmony_luni_internal_nls_Messages
XMLVM_FORWARD_DECL(org_apache_harmony_luni_internal_nls_Messages)
#endif
#ifndef XMLVM_FORWARD_DECL_org_apache_harmony_luni_util_HistoricalNamesUtil
#define XMLVM_FORWARD_DECL_org_apache_harmony_luni_util_HistoricalNamesUtil
XMLVM_FORWARD_DECL(org_apache_harmony_luni_util_HistoricalNamesUtil)
#endif
#ifndef XMLVM_FORWARD_DECL_org_apache_harmony_luni_util_PriviAction
#define XMLVM_FORWARD_DECL_org_apache_harmony_luni_util_PriviAction
XMLVM_FORWARD_DECL(org_apache_harmony_luni_util_PriviAction)
#endif
// Class declarations for java.io.InputStreamReader
XMLVM_DEFINE_CLASS(java_io_InputStreamReader, 16, XMLVM_ITABLE_SIZE_java_io_InputStreamReader)

extern JAVA_OBJECT __CLASS_java_io_InputStreamReader;
extern JAVA_OBJECT __CLASS_java_io_InputStreamReader_1ARRAY;
extern JAVA_OBJECT __CLASS_java_io_InputStreamReader_2ARRAY;
extern JAVA_OBJECT __CLASS_java_io_InputStreamReader_3ARRAY;
//XMLVM_BEGIN_DECLARATIONS
#define __ADDITIONAL_INSTANCE_FIELDS_java_io_InputStreamReader
//XMLVM_END_DECLARATIONS

#define __INSTANCE_FIELDS_java_io_InputStreamReader \
    __INSTANCE_FIELDS_java_io_Reader; \
    struct { \
        JAVA_OBJECT in_; \
        JAVA_BOOLEAN endOfInput_; \
        JAVA_OBJECT decoder_; \
        JAVA_OBJECT bytes_; \
        __ADDITIONAL_INSTANCE_FIELDS_java_io_InputStreamReader \
    } java_io_InputStreamReader

struct java_io_InputStreamReader {
    __TIB_DEFINITION_java_io_InputStreamReader* tib;
    struct {
        __INSTANCE_FIELDS_java_io_InputStreamReader;
    } fields;
};
#ifndef XMLVM_FORWARD_DECL_java_io_InputStreamReader
#define XMLVM_FORWARD_DECL_java_io_InputStreamReader
typedef struct java_io_InputStreamReader java_io_InputStreamReader;
#endif

#define XMLVM_VTABLE_SIZE_java_io_InputStreamReader 16
#define XMLVM_VTABLE_IDX_java_io_InputStreamReader_close__ 6
#define XMLVM_VTABLE_IDX_java_io_InputStreamReader_read__ 9
#define XMLVM_VTABLE_IDX_java_io_InputStreamReader_read___char_1ARRAY_int_int 11
#define XMLVM_VTABLE_IDX_java_io_InputStreamReader_ready__ 13

void __INIT_java_io_InputStreamReader();
void __INIT_IMPL_java_io_InputStreamReader();
void __DELETE_java_io_InputStreamReader(void* me, void* client_data);
void __INIT_INSTANCE_MEMBERS_java_io_InputStreamReader(JAVA_OBJECT me, int derivedClassWillRegisterFinalizer);
JAVA_OBJECT __NEW_java_io_InputStreamReader();
JAVA_OBJECT __NEW_INSTANCE_java_io_InputStreamReader();
JAVA_INT java_io_InputStreamReader_GET_BUFFER_SIZE();
void java_io_InputStreamReader_PUT_BUFFER_SIZE(JAVA_INT v);
void java_io_InputStreamReader___INIT____java_io_InputStream(JAVA_OBJECT me, JAVA_OBJECT n1);
void java_io_InputStreamReader___INIT____java_io_InputStream_java_lang_String(JAVA_OBJECT me, JAVA_OBJECT n1, JAVA_OBJECT n2);
void java_io_InputStreamReader___INIT____java_io_InputStream_java_nio_charset_CharsetDecoder(JAVA_OBJECT me, JAVA_OBJECT n1, JAVA_OBJECT n2);
void java_io_InputStreamReader___INIT____java_io_InputStream_java_nio_charset_Charset(JAVA_OBJECT me, JAVA_OBJECT n1, JAVA_OBJECT n2);
// Vtable index: 6
void java_io_InputStreamReader_close__(JAVA_OBJECT me);
JAVA_OBJECT java_io_InputStreamReader_getEncoding__(JAVA_OBJECT me);
// Vtable index: 9
JAVA_INT java_io_InputStreamReader_read__(JAVA_OBJECT me);
// Vtable index: 11
JAVA_INT java_io_InputStreamReader_read___char_1ARRAY_int_int(JAVA_OBJECT me, JAVA_OBJECT n1, JAVA_INT n2, JAVA_INT n3);
JAVA_BOOLEAN java_io_InputStreamReader_isOpen__(JAVA_OBJECT me);
// Vtable index: 13
JAVA_BOOLEAN java_io_InputStreamReader_ready__(JAVA_OBJECT me);

#endif
