#ifndef __JAVA_NET_SOCKETPERMISSIONCOLLECTION__
#define __JAVA_NET_SOCKETPERMISSIONCOLLECTION__

#include "xmlvm.h"

// Preprocessor constants for interfaces:
#define XMLVM_ITABLE_SIZE_java_net_SocketPermissionCollection 0
// Implemented interfaces:
// Super Class:
#include "java_security_PermissionCollection.h"

// Circular references:
#ifndef XMLVM_FORWARD_DECL_java_lang_IllegalArgumentException
#define XMLVM_FORWARD_DECL_java_lang_IllegalArgumentException
XMLVM_FORWARD_DECL(java_lang_IllegalArgumentException)
#endif
#ifndef XMLVM_FORWARD_DECL_java_lang_IllegalStateException
#define XMLVM_FORWARD_DECL_java_lang_IllegalStateException
XMLVM_FORWARD_DECL(java_lang_IllegalStateException)
#endif
#ifndef XMLVM_FORWARD_DECL_java_lang_Object
#define XMLVM_FORWARD_DECL_java_lang_Object
XMLVM_FORWARD_DECL(java_lang_Object)
#endif
#ifndef XMLVM_FORWARD_DECL_java_lang_String
#define XMLVM_FORWARD_DECL_java_lang_String
XMLVM_FORWARD_DECL(java_lang_String)
#endif
#ifndef XMLVM_FORWARD_DECL_java_net_SocketPermission
#define XMLVM_FORWARD_DECL_java_net_SocketPermission
XMLVM_FORWARD_DECL(java_net_SocketPermission)
#endif
#ifndef XMLVM_FORWARD_DECL_java_security_Permission
#define XMLVM_FORWARD_DECL_java_security_Permission
XMLVM_FORWARD_DECL(java_security_Permission)
#endif
#ifndef XMLVM_FORWARD_DECL_java_util_Enumeration
#define XMLVM_FORWARD_DECL_java_util_Enumeration
XMLVM_FORWARD_DECL(java_util_Enumeration)
#endif
#ifndef XMLVM_FORWARD_DECL_java_util_Vector
#define XMLVM_FORWARD_DECL_java_util_Vector
XMLVM_FORWARD_DECL(java_util_Vector)
#endif
// Class declarations for java.net.SocketPermissionCollection
XMLVM_DEFINE_CLASS(java_net_SocketPermissionCollection, 9, XMLVM_ITABLE_SIZE_java_net_SocketPermissionCollection)

extern JAVA_OBJECT __CLASS_java_net_SocketPermissionCollection;
extern JAVA_OBJECT __CLASS_java_net_SocketPermissionCollection_1ARRAY;
extern JAVA_OBJECT __CLASS_java_net_SocketPermissionCollection_2ARRAY;
extern JAVA_OBJECT __CLASS_java_net_SocketPermissionCollection_3ARRAY;
//XMLVM_BEGIN_DECLARATIONS
#define __ADDITIONAL_INSTANCE_FIELDS_java_net_SocketPermissionCollection
//XMLVM_END_DECLARATIONS

#define __INSTANCE_FIELDS_java_net_SocketPermissionCollection \
    __INSTANCE_FIELDS_java_security_PermissionCollection; \
    struct { \
        JAVA_OBJECT permissions_; \
        __ADDITIONAL_INSTANCE_FIELDS_java_net_SocketPermissionCollection \
    } java_net_SocketPermissionCollection

struct java_net_SocketPermissionCollection {
    __TIB_DEFINITION_java_net_SocketPermissionCollection* tib;
    struct {
        __INSTANCE_FIELDS_java_net_SocketPermissionCollection;
    } fields;
};
#ifndef XMLVM_FORWARD_DECL_java_net_SocketPermissionCollection
#define XMLVM_FORWARD_DECL_java_net_SocketPermissionCollection
typedef struct java_net_SocketPermissionCollection java_net_SocketPermissionCollection;
#endif

#define XMLVM_VTABLE_SIZE_java_net_SocketPermissionCollection 9
#define XMLVM_VTABLE_IDX_java_net_SocketPermissionCollection_add___java_security_Permission 6
#define XMLVM_VTABLE_IDX_java_net_SocketPermissionCollection_elements__ 7
#define XMLVM_VTABLE_IDX_java_net_SocketPermissionCollection_implies___java_security_Permission 8

void __INIT_java_net_SocketPermissionCollection();
void __INIT_IMPL_java_net_SocketPermissionCollection();
void __DELETE_java_net_SocketPermissionCollection(void* me, void* client_data);
void __INIT_INSTANCE_MEMBERS_java_net_SocketPermissionCollection(JAVA_OBJECT me, int derivedClassWillRegisterFinalizer);
JAVA_OBJECT __NEW_java_net_SocketPermissionCollection();
JAVA_OBJECT __NEW_INSTANCE_java_net_SocketPermissionCollection();
JAVA_LONG java_net_SocketPermissionCollection_GET_serialVersionUID();
void java_net_SocketPermissionCollection_PUT_serialVersionUID(JAVA_LONG v);
void java_net_SocketPermissionCollection___INIT___(JAVA_OBJECT me);
// Vtable index: 6
void java_net_SocketPermissionCollection_add___java_security_Permission(JAVA_OBJECT me, JAVA_OBJECT n1);
// Vtable index: 7
JAVA_OBJECT java_net_SocketPermissionCollection_elements__(JAVA_OBJECT me);
// Vtable index: 8
JAVA_BOOLEAN java_net_SocketPermissionCollection_implies___java_security_Permission(JAVA_OBJECT me, JAVA_OBJECT n1);

#endif
